<?xml version="1.0"?>
<launch>
  <arg name="id_robot" default="$(optenv ROBOT_ID robot)"/>
  <arg name="prefix" default="$(arg id_robot)_"/>

  <!-- Camera locator arguments -->
  <arg name="run_ar_locator" default="$(optenv ROBOT_RUN_AR_LOCATOR false)"/>

  <!-- Laser locator arguments -->
  <arg name="run_reflector_locator" default="$(optenv ROBOT_RUN_REFLECTOR_LOCATOR false)"/>
  <arg name="filter_config_file" default="$(optenv ROBOT_LASER_MODEL_INTENSITY_FILTER default)_intensity_filter"/>
  <arg name="scan_topic" default="$(optenv ROBOT_PERCEPTION_SCAN_TOPIC front_laser/scan)"/>
  <arg name="camera_topic" default="$(optenv ROBOT_PERCEPTION_CAMERA_TOPIC front_rgbd_camera/rgb/image_raw)" />
  <arg name="camera_info_topic" default="$(optenv ROBOT_PERCEPTION_CAMERA_INFO_TOPIC front_rgbd_camera/rgb/camera_info)" />
  <arg name="cloud_topic" default="perception_filtered_points"/>
  <arg name="two_tag_locator_node_name" default="docking_station_laser_locator"/>
	<arg name="object_frame" default="$(arg prefix)docking_station_laser"/>

  <arg name="docking_station_tag_distance" default="$(optenv ROBOT_DOCKING_STATION_TAG_DISTANCE 0.3)"/>
  <arg name="docking_station_tag_max_distance_detection" default="$(optenv ROBOT_DOCKING_STATION_TAG_MAX_DISTANCE_DETECTION 3.5)"/>
  
  <arg name="docking_merge_locator_distance_threshold" default="0.2"/>
  <arg name="docking_merge_locator_ar_marker_frame" default="$(arg prefix)ar_marker_noisy_([0-9]+)"/>
  <arg name="docking_merge_locator_laser_frame" default="$(arg prefix)docking_station_laser_noisy_([0-9]+)"/>
  <arg name="docking_merge_locator_position_x_source" default="laser"/>
  <arg name="docking_merge_locator_position_y_source" default="laser"/>
  <arg name="docking_merge_locator_orientation_source" default="laser"/>


  <group ns="$(arg id_robot)">

    <!-- Launch AR locator to detect markers -->
    <include if="$(arg run_ar_locator)" file="$(find summit_xl_perception)/launch/ar_locator.launch">
      <arg name="id_robot" value="$(arg id_robot)"/>
      <arg name="camera_topic_name" value="$(arg camera_topic)" />
      <arg name="camera_info_topic_name" default="$(arg camera_info_topic)" />
    </include>

    <group if="$(arg run_reflector_locator)">
      <!-- Intensity filter from scan to cloud -->
      <include file="$(find summit_xl_perception)/launch/scan_to_cloud.launch">
        <arg name="id_robot" value="$(arg id_robot)"/>
        <arg name="source_topic" value="$(arg scan_topic)"/>
        <arg name="filter_config_file" value="$(arg filter_config_file)"/>
        <arg name="target_topic" value="$(arg cloud_topic)"/>
        <arg name="target_frame" value="$(arg prefix)base_link"/>
      </include>
      
      <!-- Launch laser locator to detect docking_station using reflectors -->
      <include file="$(find summit_xl_perception)/launch/multi_two_tags_locator.launch">
        <arg name="id_robot" value="$(arg id_robot)"/>
        <arg name="two_tag_locator_node_name" value="$(arg two_tag_locator_node_name)"/>
        <arg name="object_frame" value="$(arg object_frame)"/>
        <arg name="input_topic_name" value="$(arg cloud_topic)"/>
        <arg name="tag_distance" value="$(arg docking_station_tag_distance)"/>
        <arg name="tag_max_distance_detection" value="$(arg docking_station_tag_max_distance_detection)"/>
      </include>
    
      <!-- if both are running -->
      <group  if="$(arg run_ar_locator)">
        <!-- Launch merge_locator to publish docking station merged detections from camera and laser -->
        <include file="$(find summit_xl_perception)/launch/merge_locator.launch">
          <arg name="id_robot" value="$(arg id_robot)"/>
          <arg name="merged_object" value="docking_station"/>
          <arg name="distance_threshold" value="$(arg docking_merge_locator_distance_threshold)"/>
          <arg name="ar_marker_frame" value="$(arg docking_merge_locator_ar_marker_frame)"/>
          <arg name="laser_frame" value="$(arg docking_merge_locator_laser_frame)"/>
          <arg name="position_x_source" value="$(arg docking_merge_locator_position_x_source)"/>
          <arg name="position_y_source" value="$(arg docking_merge_locator_position_y_source)"/>
          <arg name="orientation_source" value="$(arg docking_merge_locator_orientation_source)"/>
        </include>
      </group>

    </group>

  </group>

</launch>
