type: robot_local_control_components/NavigationComponent
desired_freq: 1.0

check_sensors_state: false
check_localization_state: true
has_safety_laser: $(arg has_safety_laser)
safety_laser_mode_allowed: safe
charge_disable_procedures: true
uncharge_procedure_name: UnchargeComponent
goto_procedure_name: GoToComponent

#components: [GoToComponent, ChargeComponent, UnchargeComponent, MoveComponent]
components:
 - GoToComponent
 - MoveComponent
 - ChargeComponent
 - UnchargeComponent

GoToComponent:
  type: robot_local_control_procedures/GoToMoveBase
  desired_freq: 5.0
  action_namespace: move_base
  global_frame: $(arg global_frame)
  base_frame: $(arg base_frame)
  default_yaw_tolerance: 0.1 # when goal has orientation. if orientation is invalid, goal tolerance is changed to 3.14
  has_safety_laser: $(arg has_safety_laser)
  yaw_tolerance: 0.1
  xy_tolerance: 0.10
  preemptable: false
  clear_costmaps_before_send_goal: false
  local_planner_namespace: TebLocalPlannerROS

MoveComponent:
  type: robot_local_control_procedures/Move
  desired_freq: 5.0
  action_namespace: move
  move_state_topic: move/state
  preemptable: false

ChargeComponent:
  type: robot_local_control_procedures/Charge
  desired_freq: 5.0
  has_laser_safety: $(arg has_safety_laser) 
  docker_namespace: $(arg charge_docker_namespace)
  generic_dock_frame: .*docking_station.*
  dock_frame: $(arg charge_dock_frame) 
  laser_mode_at_begining: docking_station
  robot_dock_frame: $(arg base_frame)
  dock_offset_x: $(arg charge_dock_offset_x)
  move_namespace: move
  step_in_distance: $(arg charge_dock_step_in_distance) # Indicates the distance that the robot is going to move in x-axis after the docking. If 0.0 then no move action is done
  set_laser_to_standby: false # If 'true' then the lasers will be in standby after the docking
  move:
    max_velocity:
      linear_x: 0.015
      linear_y: 0.015
      angular_z: 0.1
  dock:
    max_velocity:
      linear_x: 0.1
      linear_y: 0.1
      angular_z: 0.1
  preemptable: false

UnchargeComponent:
  type: robot_local_control_procedures/Uncharge
  desired_freq: 5.0
  has_laser_safety: $(arg has_safety_laser) 
  move_namespace: move
  laser_mode_at_finish: standard
  step_back_distance: 0.35 # Indicates the distance that the robot is going to move backwards. If 0.0 then no rotation action is done
  rotation: 0.0 # Indicates the rotation that the robot is going to move after moving backwards. If 0.0 then no rotation action is done
  move:
    max_velocity:
      linear_x: 0.025
      linear_y: 0.025
      angular_z: 0.1
  preemptable: false
